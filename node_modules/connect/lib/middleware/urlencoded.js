/*!
 * Connect - urlencoded v2.9.2-supro
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * Copyright(c) 2014 Oleg Verych
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var utils = require('../utils')
  , _limit = require('./limit')
  , qs = require('qs');

/**
 * Urlencoded:
 *
 *  Get 'x-www-form-urlencoded' request bodies.
 *  Raw data is stored as `req.urlencoded`.
 *  If no `raw` option specified, provide the parsed object as `req.body`.
 *
 * Options:
 *
 *    - `limit`  byte limit [1mb]
 *    - `raw`    do not `qs.parse(buf)`
 *
 * @param {Object} options
 * @return {Function}
 * @api public
 */

module.exports = function(options){
  options = options || { };

  var limit = _limit(options.limit || '1mb');

  return function urlencoded(req, res, next){
    if(!req._body &&
        utils.hasBody(req) &&
        'application/x-www-form-urlencoded' == utils.mime(req))

        return limit(req, res,
    function(buf){// collect chunks if not error
      if(!buf){
        buf = '';
        req.on('data', function(chunk){ buf += chunk });
        req.on('end', function(){
          req._body = true;// flag as parsed
          req.urlencoded = buf;// leave raw data
          if(!options.raw) try {// parse if not disabled
            req.body = buf.length ? qs.parse(buf, options) : { };
          } catch (err){
            err.body = buf;
            return next(err);
          }
          return next();
        });
        return req.setEncoding('utf8');
      }
      return next(buf);
    });
    return next();
  }
};
